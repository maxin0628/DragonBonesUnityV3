// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using DragonBones.Core;
namespace DragonBones
{
		public class AnimationState
		{
	
		private enum  FadeState {FADE_BEFORE, FADING, FADE_COMPLETE};
		
		private static List<AnimationState> _pool;
		private static AnimationState borrowObject()
		{
		}
		private static void returnObject(AnimationState animationState)
		{
		}
		private static void clearObjects()
		{
		}
		
	
		public	bool additiveBlending;
		public bool autoTween;
		public bool autoFadeOut;
		public bool displayControl;
		public bool lastFrameAutoTween;
		public float fadeOutTime;
		public float weight;
		public string name;
		
	
		private 	bool _isPlaying;
		private bool _isComplete;
		private bool _isFadeOut;
		private bool _pausePlayheadInFade;
		private int _currentPlayTimes;
		private int _layer;
		private int _playTimes;
		private int _currentTime;
		private int _currentFrameIndex;
		private int _currentFramePosition;
		private int _currentFrameDuration;
		private int _totalTime;
		private float _time;
		private float _timeScale;
		private float _fadeWeight;
		private float _fadeTotalWeight;
		private float _fadeCurrentTime;
		private float _fadeTotalTime;
		private float _fadeBeginTime;
		private string _group;
		private  FadeState _fadeState;
		
		private List<TimelineState> _timelineStateList;
		private List<string> _mixingTransforms;
		
		private AnimationData _clip;
		private Armature _armature;


		public AnimationState ()
		{
		}

	
		public 	bool getIsComplete() ;
		public bool getIsPlaying() ;
		public int getCurrentPlayTimes() ;
		public int getLayer() ;
		public float getTotalTime() ;
		public float getCurrentWeight() ;
		public  string getGroup() ;
		public  AnimationData getClip() ;
		
		public AnimationState setAdditiveBlending(bool value);
		public AnimationState setAutoFadeOut(bool value, float fadeOutTime = -1);
		public AnimationState setWeight(float value);
		public AnimationState setFrameTween(bool autoTween_, bool lastFrameAutoTween_);
		
		public int getPlayTimes() ;
		public AnimationState setPlayTimes(int playTimes);
		public float getCurrentTime() ;
		public AnimationState setCurrentTime(float currentTime);
		public float getTimeScale() ;
		public AnimationState setTimeScale(float timeScale);


		public AnimationState fadeOut(float fadeTotalTime, bool pausePlayhead);
		public AnimationState play();
		public AnimationState stop();
		public bool getMixingTransform(string timelineName) ;
		public AnimationState addMixingTransform(string timelineName, bool recursive = true);
		public AnimationState removeMixingTransform(string timelineName, bool recursive = true);
		public AnimationState removeAllMixingTransform();

	
		private 	void fadeIn(Armature *armature, AnimationData *clip, float fadeTotalTime, float timeScale, int playTimes, bool pausePlayhead);
		
		private bool advanceTime(float passedTime);
		private void updateTimelineStates();
		private void addTimelineState(string timelineName);
		private void removeTimelineState(TimelineState timelineState);
		private void advanceFadeTime(float passedTime);
		private void advanceTimelinesTime(float passedTime);
		private void updateMainTimeline(bool isThisComplete);
		private void hideBones();
		private void clear();



		}
}

