// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using Com.Viperstudio.Events;
using Com.Viperstudio.Geom;

namespace DragonBones
{



	public class Armature : IAnimatable
	{

	
		public 		static IEventDispatcher *soundEventDispatcher;

	
		public	string name;
		
		public object userData;
		
	
		protected 	bool _needUpdate;
		protected bool _slotsZOrderChanged;
		protected bool _delayDispose;
		protected bool _lockDispose;
		
		protected List<Bone> _boneList;
		protected List<Slot> _slotList;
		protected List<EventData> _eventDataList;
		
		protected ArmatureData *_armatureData;
		protected Animation *_animation;
		protected IEventDispatcher *_eventDispatcher;
		protected object _display;



		    public bool autoTween;

			public Armature ()
			{
			}

	
		private	static bool sortBone(KeyValuePair<int, Bone> a, KeyValuePair<int, Bone> b);
		private static bool sortSlot(Slot a,  Slot b);
		
	
		public 	virtual Rectangle getBoundingBox();
		
		public virtual List<Bone> getBones() ;
		public virtual List<Slot> getSlots() ;
		
		public virtual  ArmatureData getArmatureData();
		public virtual Animation getAnimation();
		public virtual void getDisplay();
		public virtual EventDispatcher getEventDispatcher();
		
		
		
	
	    public	virtual Bone getBone(string boneName) ;
		public virtual Bone getBoneByDisplay(object display) ;
		public virtual void addBone(Bone bone);
		public virtual void addBone(Bone bone, string parentBoneName);
		public virtual void removeBone(Bone bone);
		public virtual Bone removeBone(string boneName);
		
		public virtual Slot getSlot(string slotName);
		public virtual Slot getSlotByDisplay(object display);
		public virtual void addSlot(Slot slot, string parentBoneName);
		public virtual void removeSlot(Slot slot);
		public virtual Slot* removeSlot(string slotName);
		public virtual void replaceSlot(string boneName, string oldSlotName, Slot newSlot);
		public virtual void sortSlotsByZOrder();
		
		public virtual void invalidUpdate();
		public virtual void invalidUpdate(string boneName);
		
		public virtual void advanceTime(float passedTime);
		
	
		protected	virtual void addObject(object obj);
		protected  virtual void removeObject(object obj);
		protected virtual void sortBones();
		
		protected virtual void arriveAtFrame(Frame frame, AnimationState animationState, bool isCross);


	}




}

